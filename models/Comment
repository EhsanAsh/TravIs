// Desc: This file will represent the Comment model
// Note: Each comment belongs to a user and a trip,
//       Each comment has many comments associated with it
//       Each comment has many likes associated with it
//       Each comment has many dislikes associated with it
//       Each comment belongs to a parent comment
//       Each comment has many child comments
// ==========================================================

// Dependencies
// =============================================================
const { Model, DataTypes } = require('sequelize');
const sequelize = require('../config/connection');
// =============================================================

// Create the Comment model, with methods
//to add and remove likes and dislikes
// =============================================================
class Comment extends Model {
    // Method to add a like to a comment
    addLike(userId) {
        if (!this.likes.includes(userId)) {
            this.likes.push(userId);
        }
    }

    // Method to remove a like from a comment
    removeLike(userId) {
        const index = this.likes.indexOf(userId);
        if (index !== -1) {
            this.likes.splice(index, 1);
        }
    }

    // Method to add a dislike to a comment
    addDislike(userId) {
        if (!this.dislikes.includes(userId)) {
            this.dislikes.push(userId);
        }
    }

    // Method to remove a dislike from a comment
    removeDislike(userId) {
        const index = this.dislikes.indexOf(userId);
        if (index !== -1) {
            this.dislikes.splice(index, 1);
        }
    }
}
// =============================================================

// Initialize the Comment model
// =============================================================
Comment.init(
    {
        id: {
            type: DataTypes.INTEGER,
            allowNull: false,
            primaryKey: true,
            autoIncrement: true,
        },

        comment: {
            type: DataTypes.STRING,
            allowNull: false,
            validate: {
                len: [4],
            },
        },

        date_created: {
            type: DataTypes.DATEONLY,
            allowNull: false,
            defaultValue: DataTypes.NOW,
        },

        // will store an array of user ids associated with the comment for likes
        likes: {
            type: DataTypes.ARRAY(DataTypes.INTEGER),
            defaultValue: [],
        },

        // will store an array of user ids associated with the comment for dislikes
        dislikes: {
            type: DataTypes.ARRAY(DataTypes.INTEGER),
            defaultValue: [],
        },

        user_id: {
            type: DataTypes.INTEGER,
            references: {
                model: 'user',
                key: 'id',
            },
        },

        trip_id: {
            type: DataTypes.INTEGER,
            references: {
                model: 'trip',
                key: 'id',
            },
        },

        parent_comment_id: {
            type: DataTypes.INTEGER,
            references: {
                model: 'comment',
                key: 'id',
            },
        },
    },
    {
        sequelize,
        timestamps: false,
        freezeTableName: true,
        underscored: true,
        modelName: 'comment',
    }
);
// =============================================================

// Export the Comment model
module.exports = Comment;
